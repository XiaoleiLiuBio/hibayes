% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bayes.r
\name{bayes}
\alias{bayes}
\title{Bayes model}
\usage{
bayes(
  y,
  Z,
  X = NULL,
  R = NULL,
  model = c("B", "A", "L", "RR", "Bpi", "C", "Cpi", "R"),
  map = NULL,
  pi = NULL,
  fold = NULL,
  niter = 20000,
  nburn = 12000,
  windsize = NULL,
  wppa = 0.01,
  vg = NULL,
  dfvg = NULL,
  s2vg = NULL,
  ve = NULL,
  dfve = NULL,
  s2ve = NULL,
  outfreq = 100,
  seed = 666666,
  verbose = TRUE
)
}
\arguments{
\item{y}{vector of phenotype, NAs are not allowed.}

\item{Z}{numeric matrix of genotype with individuals in rows and markers in columns, NAs are not allowed.}

\item{X}{(optional) covariate matrix of all individuals, all values should be in digits, characters and NAs are not allowed, please use 'model.matrix' function to prepare it.}

\item{R}{(optional) environmental random effects matrix of all individuals, NAs are not allowed.}

\item{model}{bayes model including: "B", "A", "L", "RR", "Bpi", "C", "Cpi", "R".
\itemize{
\item "RR" - Bayes Ridge Regression: all SNPs have non-zero effects and share the same variance, equals to GBLUP.
\item "A" - BayesA: all SNPs have non-zero effects but use different variance which follows an inverse chi-square distribution.
\item "B" - BayesB: only a small part of SNPs (1-pi) have non-zero effects but use different variance which follows an inverse chi-square distribution.
\item "Bpi" - BayesBpi: the same with "BayesB", but 'pi' is not fixed.
\item "C" - BayesC: only a small part of SNPs (1-pi) have non-zero effects and share the same variance.
\item "Cpi" - BayesCpi: the same with "BayesC", but 'pi' is not fixed.
\item "L" - BayesLASSO: all SNPs have non-zero effects but use different variance which follows an exponential distribution.
\item "R" - BayesR: only a small part of SNPs have non-zero effects, but the SNPs are allocated into different groups, each group has the same variance.
}}

\item{map}{(optional, only for GWAS) the map information of genotype, columns are: SNPs, chromosome, physical position.}

\item{pi}{percentage of zero effect SNPs. For bayesR, it is a vector for groups of SNPs, the default is c(0.95, 0.02, 0.02, 0.01).}

\item{fold}{percentage of variance explained for groups of SNPs, the default is c(0, 0.0001, 0.001, 0.01).}

\item{niter}{the number of MCMC iteration.}

\item{nburn}{the number of iterations to be discarded.}

\item{windsize}{window size in bp for GWAS, the default is NULL.}

\item{wppa}{the threshold of genetic variance explained by single window, the default is 0.01.}

\item{vg}{prior value of genetic variance.}

\item{dfvg}{the number of degrees of freedom for the distribution of genetic variance.}

\item{s2vg}{scale parameter for the distribution of genetic variance.}

\item{ve}{prior value of residual variance.}

\item{dfve}{the number of degrees of freedom for the distribution of residual variance.}

\item{s2ve}{scale parameter for the distribution of residual variance.}

\item{outfreq}{frequency of information output on console, the default is 100.}

\item{seed}{seed for random sample.}

\item{verbose}{whether to print the iteration information.}
}
\description{
Bayes linear regression model using individual level data
}
\examples{
set.seed(123)
n = 1000                        # number of observations
m = 100                         # number of SNPs
k = 10                          # number of causal SNPs
h2 = 0.5                        # heritability
Z = matrix(sample(c(0, 1, 2), n*m, prob=c(0.25, 0.5, 0.25), replace=TRUE), n)
Z = apply(Z, 2, function(x){x-mean(x)})
qtl = sort(sample(1:m, k))
betaTrue = array(0,m)
betaTrue[qtl] = rnorm(k)
g = Z\%*\%betaTrue
vg = var(g)
ve = (1-h2)/h2 * vg
y = g + rnorm(n,0,sqrt(ve))

## fit model
fit = bayes(y=y, Z=Z, model="BayesCpi", niter=1000, nburn=500)

## check results
cor(fit$g, betaTrue)
plot(fit$g, betaTrue)

#####load plink binary file#####
# bfile_path = system.file("extdata", "example", package = "hibayes")
# data = read_plink(bfile_path, out=tempfile())
# pheno = data$pheno
# geno = data$geno
# map = data$map
## For GS/GP
# fit = bayes(y=pheno[,1], Z=geno, model="BayesR", niter=20000, nburn=10000)
## For GWAS
# fit = bayes(y=pheno[,1], Z=geno, map=map, windsize=1e6, model="BayesR", niter=20000, nburn=10000)
}
